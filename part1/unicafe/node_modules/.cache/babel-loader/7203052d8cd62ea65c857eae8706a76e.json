{"ast":null,"code":"var _jsxFileName = \"/home/gatsby/fullstackopen/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  heading\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: heading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Header;\n\nconst Button = ({\n  clickHandle,\n  name\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandle,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Button;\n\nconst Statistics = ({\n  name,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [name, \" : \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      heading: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandle: () => setGood(good + 1),\n      name: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandle: () => setNeutral(neutral + 1),\n      name: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandle: () => setBad(bad + 1),\n      name: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      heading: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"Good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"Neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"Bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"Average\",\n      value: (good + bad + neutral) / 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      name: \"Positive\",\n      value: good * 100 / (good + bad + neutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/gatsby/fullstackopen/unicafe/src/App.js"],"names":["React","useState","Header","heading","Button","clickHandle","name","Statistics","value","App","good","setGood","neutral","setNeutral","bad","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC5B,sBACI;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,CAJD;;KAAMD,M;;AAMN,MAAME,MAAM,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAAyB;AACtC,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAED,WAAjB;AAAA,gBAA+BC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAND;;MAAMF,M;;AAQN,MAAMG,UAAU,GAAG,CAAC;AAACD,EAAAA,IAAD;AAAOE,EAAAA;AAAP,CAAD,KAAmB;AACpC,sBACE;AAAA,eAAIF,IAAJ,SAAaE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMD,U;;AAMN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;AAGA,sBACA;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMU,OAAO,CAACD,IAAI,GAAG,CAAR,CAAlC;AAA8C,MAAA,IAAI,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMG,UAAU,CAACD,OAAO,GAAG,CAAX,CAArC;AAAoD,MAAA,IAAI,EAAE;AAA1D;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMG,MAAM,CAACD,GAAG,GAAG,CAAP,CAAjC;AAA4C,MAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAEJ;AAA/B;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,SAAjB;AAA2B,MAAA,KAAK,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,KAAjB;AAAuB,MAAA,KAAK,EAAEE;AAA9B;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,SAAjB;AAA2B,MAAA,KAAK,EAAE,CAACJ,IAAI,GAAGI,GAAP,GAAaF,OAAd,IAAuB;AAAzD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAEF,IAAI,GAAC,GAAL,IAAUA,IAAI,GAAGI,GAAP,GAAaF,OAAvB;AAAnC;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAaD,CAnBD;;GAAMH,G;;MAAAA,G;AAqBN,eAAeA,GAAf","sourcesContent":["import React, { useState }from 'react'\n\nconst Header = ({heading}) => {\n  return (\n      <h1>{heading}</h1>\n  )\n}\n\nconst Button = ({clickHandle, name}) => {\n  return (\n    <>\n      <button onClick={clickHandle}>{name}</button>\n    </>\n  )\n}\n\nconst Statistics = ({name, value}) => {\n  return (\n    <p>{name} : {value}</p>\n  )\n}\n \nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n\n  return (\n  <div>\n    <Header heading=\"Give Feedback\"/>\n    <Button clickHandle={() => setGood(good + 1)} name={\"Good\"}/>\n    <Button clickHandle={() => setNeutral(neutral + 1)} name={\"Neutral\"}/>\n    <Button clickHandle={() => setBad(bad + 1)} name=\"Bad\"/>\n    <Header heading=\"Statistics\"/>\n    <Statistics name=\"Good\" value={good}/>\n    <Statistics name=\"Neutral\" value={neutral}/>\n    <Statistics name=\"Bad\" value={bad}/>\n    <Statistics name=\"Average\" value={(good + bad + neutral)/3}/>\n    <Statistics name=\"Positive\" value={good*100/(good + bad + neutral)}/>\n  </div>)\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}