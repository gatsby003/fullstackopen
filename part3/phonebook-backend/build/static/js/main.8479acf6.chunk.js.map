{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","serviceFunctions","getAll","axios","get","then","response","data","create","newObject","post","update","put","id","deletePerson","delete","console","log","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newQuery","setNewQuery","newSearch","setNewSearch","newError","setNewError","useEffect","personService","inititalPersons","handleDelete","window","confirm","Contacts","content","forEach","person","push","name","number","onClick","SearchResult","Numbers","service","length","Notification","setTimeout","style","color","fontStyle","fontSize","border","onChange","event","preventDefault","query","target","value","result","toLocaleLowerCase","includes","onSubmit","nameObject","arr","checkDuplicates","duplicate","find","newArray","filter","returnedPerson","concat","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8479acf6.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return(request.then(response => response.data))\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (newObject) => {\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => console.log(response))\n}\n\nconst serviceFunctions = {getAll, create, update, deletePerson} \n\nexport default serviceFunctions\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newQuery, setNewQuery ] = useState('')\n  const [ newSearch, setNewSearch ] = useState([])\n  const [ newError, setNewError ] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(inititalPersons => {\n        setPersons(inititalPersons)\n      })\n  }, [])\n\n  const checkDuplicates = (name) => {\n    const arr = []\n    persons.forEach(person => arr.push(person.name))\n    return arr.includes(name.name)\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name : newName,\n      number : newNumber,\n    }\n\n    if (checkDuplicates(nameObject)){\n      const duplicate = persons.find(person => person.name === newName)\n      console.log(duplicate.id);\n      nameObject.id = duplicate.id\n      const newArray = persons.filter(person => person.name !== newName)\n      newArray.push(nameObject)\n      console.log(newArray)\n      personService\n          .update(nameObject)\n          .then(returnedPerson => {\n            setPersons(newArray)\n            setNewName('')\n            setNewNumber('')\n            setNewError(`${newName} updated to phonebook.`)\n          })\n    } else {\n      personService\n          .create(nameObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setNewError(`${newName} added to phonebook.`)\n          })\n    }\n  }\n\n  const handleDelete = (id) => {\n    if (window.confirm(\"you wanna delete this contact?\")){\n      personService\n      .deletePerson(id)\n      .then(console.log(\"yo\"))\n      personService.getAll().then(inititalPersons => {\n        setPersons(inititalPersons)\n        setNewError(`Deleted Successfully`)\n      })\n    }\n  }\n\n\n  const handleInput = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    event.preventDefault()\n    const query = event.target.value\n    setNewQuery(event.target.value)\n    setNewSearch([])\n    const result = []\n    persons.forEach(person => {\n      if (person.name.toLocaleLowerCase().includes(query)){\n        result.push(person)\n      }\n    })\n    console.log(result)\n    setNewSearch(result)\n  }\n\n  const Contacts = ({deletePerson}) => {\n    const content = []\n    persons.forEach(person => content.push(\n      <div key={person.name}>\n      <ul>\n      <li>\n        {person.name} : {person.number} \n      </li>\n      <button onClick={() => handleDelete(person.id)}>delete</button>\n      </ul>\n      </div>\n    ))\n    return (content)\n  }\n\n  const SearchResult = () => {\n    if (newSearch === []){\n      return <></>\n    }\n    const content = []\n    newSearch.forEach(person => content.push(\n      <h4 key={person.name + 1}>\n        {person.name} : {person.number}\n      </h4>\n    ))\n    return (content)\n  }\n\n  const Numbers = ({service}) => {\n    if (newSearch.length === 0) {\n      return <Contacts handleDelete={service}/>\n    }\n    return <SearchResult />\n  }\n\n  const Notification = ({newError,setNewError}) => {\n    const style = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16,\n        border: 5,\n      }\n\n      setTimeout(() => {\n        setNewError('')\n      }, 5000)\n      \n    return(\n      <div style={style}>\n        <h1>{newError}</h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      filter shown with : <input onChange={handleSearch} value={newQuery} ></input>\n      <Notification newError={newError} setNewError={setNewError}/>\n      <form onSubmit={handleSubmit}>\n        <h1>Add a new</h1>\n        <div>\n          name: <input onChange={handleInput} value={newName}/>\n        </div>\n        <div>\n          number: <input onChange={handleNumber} value={newNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <div>\n        <Numbers service={handleDelete}/>\n      </div>\n    </div>\n\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}